Flight:
	flight_id
	starting_airport
	dest_airport
	starting_time
	stage
	travel_time
	taxi_time
	wait_time

Code for Grid Stride Loops

for each flight:
	if start_time == current time:
		stage = prepare for takeoff

	if plane preparing for takeoff:
		look for runway
		if available:
			claim runway
			stage = takeoff
			taxi_time = constant (based on airport)
		else:
			wait (wait_time++)

	elif plane is in takeoff:
		taxi_time--
		if taxi_time == 0:
			stage = in air
			set last accessed time of runway to current time (so no other planes attempt to use this runway immediately after release)
			release runway

	elif plane is in air:
		travel_time--
		if travel_time == 0:
			stage = waiting to land
			add flight to list of flights to send (to other rank)

	elif plane is waiting to land:
		look for runway
		if available:
			claim runway:
			stage = landing
			taxi_time = constant (based on airport)
		else:
			wait (wait_time++)

	elif plane is landing:
		taxi_time--
		if taxi_time == 0:
			stage = landed
			land_time = current time
			set last accessed time of runway to current time
			release runway

Problems:
It is possible for a flight to be indefinitely blocked.
Flights at the beginning of the array will be processed first (due to the grid-stride loop)

===============================

MPI Rank Logic

For all other ranks:
	recv # of flights that will be received
	send # of flights that will be sent

For all other ranks:
	recv flights
	send flights

Note: Not sure if recv or send should be posted first, but likely recv first.
